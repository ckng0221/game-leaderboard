services:
  # app services
  api:
    build:
      context: .
      dockerfile: ./apps/Dockerfile.service
      target: production
      args:
        service: api
    env_file:
      - ./apps/api/.env
    environment:
      - ENV=production
      - DB_URL=dbuser:dbuser123@tcp(mysql:3306)/game_leaderboard?charset=utf8mb4&parseTime=True&loc=UTC
      - REDIS_HOST=redis:6379
      - REDIS_PASSWORD=redispoconlypassword
    depends_on:
      - mysql
      - redis
    restart: always
    networks:
      - private
    links:
      - mysql
    # ports:
    #   - "8000:8000"

  ui:
    build:
      context: ./apps/ui
      args:
        - VITE_API_BASE_URL=http://game-leaderboard.127.0.0.1.nip.io/api
    ports:
      - 80:80
    networks:
      - private
      - public
    depends_on:
      - api

  # dependencies
  # rabbitmq:
  #   image: rabbitmq
  #   # ports: # optional expose
  #   #   - "5672:5672"
  #   networks:
  #     - private

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD_ENCRYPTED: false
      MYSQL_DATABASE: "game_leaderboard"
      MYSQL_USER: "dbuser"
      MYSQL_ROOT_PASSWORD: "dbuser123"
      MYSQL_PASSWORD: "dbuser123"
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ports:
      - "3309:3306"
    volumes:
      - mysql-db:/var/lib/mysql
    networks:
      - private

  redis:
    image: redis:7.2-alpine
    restart: always
    # ports:
    #   - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass redispoconlypassword
    volumes:
      - redis-db:/data
    networks:
      - private

volumes:
  mysql-db:
  redis-db:
    driver: local
networks:
  public:
  private:
    driver: bridge
# ---
# Comands
# docker compose up -d
# docker compose up -d --build
# docker-compose up -d mysql   # start mysql only
# docker compose down
# docker compose down -v  # delete volume

# NOTE: api container could fail to run before mysql is ready. Will restart when failing
